services:
  postgres:
    image: postgres:14
    container_name: postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: copart
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

#  minio:
#    image: minio/minio:latest
#    container_name: minio
#    environment:
#      MINIO_ACCESS_KEY: admin
#      MINIO_SECRET_KEY: admin123
#    command: server /data --console-address ":9001"
#    volumes:
#      - minio_data:/data
#    ports:
#      - "9000:9000"
#      - "9001:9001"

#  copart:
#    build:
#      context: .
#      dockerfile: Dockerfile
#    image: copart-image:latest
#    container_name: copart-image-version-001
#    ports:
#      - "8080:8080"
#    environment:
#      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/copart
#      SPRING_DATASOURCE_USERNAME: user
#      SPRING_DATASOURCE_PASSWORD: password
#      MINIO_ENDPOINT: http://minio:9000
#      MINIO_ACCESS_KEY: admin
#      MINIO_SECRET_KEY: admin123
#    depends_on:
#      - postgres
#      - minio

#  prometheus:
#    image: prom/prometheus:latest
#    container_name: prometheus
#    volumes:
#      - prometheus_data:/prometheus
#    ports:
#      - "9090:9090"
#    command:
#      - "--config.file=/etc/prometheus/prometheus.yml"
#    configs:
#      - source: prometheus_config
#        target: /etc/prometheus/prometheus.yml

#  grafana:
#    image: grafana/grafana:latest
#    container_name: grafana
#    environment:
#      GF_SECURITY_ADMIN_PASSWORD: admin  # Set Grafana admin password
#    ports:
#      - "3000:3000"  # Expose port 3000 for Grafana
#    volumes:
#      - grafana_data:/var/lib/grafana  # Persist Grafana data
#    depends_on:
#      - prometheus

volumes:
  postgres_data:
    driver: local
#  minio_data:
#    driver: local
#  grafana_data:
#    driver: local
#  prometheus_data:
#    driver: local

#configs:
#  prometheus_config:
#    file: ./prometheus.yml  # Configuration file for Prometheus
